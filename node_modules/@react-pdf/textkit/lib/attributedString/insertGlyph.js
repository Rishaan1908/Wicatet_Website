"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

exports.__esModule = true;
exports.default = void 0;

var _append = _interopRequireDefault(require("./append"));

var _add = _interopRequireDefault(require("../run/add"));

var _insert = _interopRequireDefault(require("../run/insert"));

var _runIndexAt = _interopRequireDefault(require("./runIndexAt"));

var _stringFromCodePoints = _interopRequireDefault(require("../utils/stringFromCodePoints"));

/**
 * Insert glyph into attributed string
 *
 * @param {number} index
 * @param {Object} glyph
 * @param {Object} attributed string
 * @return {Object} attributed string with new glyph
 */
var insertGlyph = function insertGlyph(index, glyph, attributedString) {
  var runIndex = (0, _runIndexAt.default)(index, attributedString); // Add glyph to the end if run index invalid

  if (runIndex === -1) return (0, _append.default)(glyph, attributedString);
  var codePoints = (glyph === null || glyph === void 0 ? void 0 : glyph.codePoints) || [];
  var string = attributedString.string.slice(0, index) + (0, _stringFromCodePoints.default)(codePoints) + attributedString.string.slice(index);
  var runs = attributedString.runs.map(function (run, i) {
    if (i === runIndex) return (0, _insert.default)(index - run.start, glyph, run);
    if (i > runIndex) return (0, _add.default)(codePoints.length, run);
    return run;
  });
  return Object.assign({}, attributedString, {
    string: string,
    runs: runs
  });
};

var _default = insertGlyph;
exports.default = _default;