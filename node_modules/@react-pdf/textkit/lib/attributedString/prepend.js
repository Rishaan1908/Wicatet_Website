"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

exports.__esModule = true;
exports.default = void 0;

var _add = _interopRequireDefault(require("../run/add"));

var _empty = _interopRequireDefault(require("../run/empty"));

var _prepend = _interopRequireDefault(require("../run/prepend"));

var _stringFromCodePoints = _interopRequireDefault(require("../utils/stringFromCodePoints"));

/**
 * prepend glyph into last run of attributed string
 *
 * @param {Object} glyph
 * @param {Object} attributed string
 * @return {Object} attributed string with new glyph
 */
var prepend = function prepend(glyph, attributedString) {
  var codePoints = (glyph === null || glyph === void 0 ? void 0 : glyph.codePoints) || [];
  var string = (0, _stringFromCodePoints.default)(codePoints) + attributedString.string;
  var offset = codePoints.length;
  var firstRun = attributedString.runs[0] || (0, _empty.default)();
  var lastRuns = attributedString.runs.slice(1).map(function (run) {
    return (0, _add.default)(offset, run);
  });
  var runs = [(0, _prepend.default)(glyph, firstRun)].concat(lastRuns);
  return Object.assign({}, attributedString, {
    runs: runs,
    string: string
  });
};

var _default = prepend;
exports.default = _default;