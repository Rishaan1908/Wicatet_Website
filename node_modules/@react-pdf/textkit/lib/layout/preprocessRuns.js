"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

exports.__esModule = true;
exports.default = void 0;

var _fns = require("@react-pdf/fns");

var _omit = _interopRequireDefault(require("../run/omit"));

var _flatten = _interopRequireDefault(require("../run/flatten"));

var _empty = _interopRequireDefault(require("../attributedString/empty"));

var omitFont = function omitFont(attributedString) {
  var runs = attributedString.runs.map(function (run) {
    return (0, _omit.default)('font', run);
  });
  return Object.assign({}, attributedString, {
    runs: runs
  });
};
/**
 * Performs font substitution and script itemization on attributed string
 *
 * @param  {Object}  engines
 * @param  {Object}  layout options
 * @param  {Object}  attributed string
 * @return {Object} processed attributed string
 */


var preprocessRuns = function preprocessRuns(engines, options) {
  return function (attributedString) {
    if ((0, _fns.isNil)(attributedString)) return (0, _empty.default)();
    var string = attributedString.string;
    var fontSubstitution = engines.fontSubstitution,
        scriptItemizer = engines.scriptItemizer;

    var _omitFont = omitFont(attributedString),
        omittedFontRuns = _omitFont.runs;

    var _fontSubstitution = fontSubstitution(options)(attributedString),
        substitutedRuns = _fontSubstitution.runs;

    var _scriptItemizer = scriptItemizer(options)(attributedString),
        itemizationRuns = _scriptItemizer.runs;

    var runs = substitutedRuns.concat(itemizationRuns).concat(omittedFontRuns);
    return {
      string: string,
      runs: (0, _flatten.default)(runs)
    };
  };
};

var _default = preprocessRuns;
exports.default = _default;