import*as e from"@react-pdf/primitives";export*from"@react-pdf/primitives";import t from"fs";import r from"blob-stream";import n from"@react-pdf/font";import o from"@react-pdf/render";import i from"@react-pdf/pdfkit";import a from"@react-pdf/layout";import c from"react-reconciler";import{unstable_scheduleCallback as s,unstable_cancelCallback as d}from"scheduler";const p=(e,t)=>{const r=Object.keys(e),n=Object.keys(t);if(r.length!==n.length)return!1;for(let n=0;n<r.length;n+=1){const o=r[n];if("render"===o&&!e[o]!=!t[o])return!1;if("children"!==o&&e[o]!==t[o]){if("object"==typeof e[o]&&"object"==typeof t[o]&&p(e[o],t[o]))continue;return!1}if("children"===o&&("string"==typeof e[o]||"string"==typeof t[o]))return e[o]===t[o]}return!0},l={},f=({onChange:e=(()=>{})})=>c({schedulePassiveEffects:s,cancelPassiveEffects:d,supportsMutation:!0,isPrimaryRenderer:!1,warnsIfNotActing:!1,appendInitialChild(e,t){e.children.push(t)},createInstance:(e,{style:t,children:r,...n})=>({type:e,box:{},style:t||{},props:n||{},children:[]}),createTextInstance:(e,t)=>({type:"TEXT_INSTANCE",value:e}),finalizeInitialChildren:(e,t,r)=>!1,getPublicInstance:e=>e,prepareForCommit(){},clearContainer(){},prepareUpdate:(e,t,r,n)=>!p(r,n),resetAfterCommit:e,resetTextContent(e){},getRootHostContext:()=>l,getChildHostContext:()=>l,shouldSetTextContent:(e,t)=>!1,now:Date.now,useSyncScheduling:!0,appendChild(e,t){e.children.push(t)},appendChildToContainer(e,t){"ROOT"===e.type?e.document=t:e.children.push(t)},insertBefore(e,t,r){var n;const o=null===(n=e.children)||void 0===n?void 0:n.indexOf(r);void 0!==o&&-1!==o&&t&&e.children.splice(o,0,t)},removeChild(e,t){var r;const n=null===(r=e.children)||void 0===r?void 0:r.indexOf(t);void 0!==n&&-1!==n&&e.children.splice(n,1)},removeChildFromContainer(e,t){var r;const n=null===(r=e.children)||void 0===r?void 0:r.indexOf(t);void 0!==n&&-1!==n&&e.children.splice(n,1)},commitTextUpdate(e,t,r){e.value=r},commitUpdate(e,t,r,n,o){const{style:i,...a}=o;e.props=a,e.style=i}});var u="2.2.0";const m=new n;let h;const y={},v=e=>{const t={type:"ROOT",document:null};h=h||f({onChange:()=>{var e;const t=(null===(e=y.change)||void 0===e?void 0:e.slice())||[];for(let e=0;e<t.length;e+=1)t[e]()}});const n=h.createContainer(t),c=e=>{h.updateContainer(e,n,null)};e&&c(e);const s=async(e=!0)=>{const r=t.document.props||{},{pdfVersion:n,language:c,pageLayout:s,pageMode:d}=r,p=new i({compress:e,pdfVersion:n,lang:c,displayTitle:!0,autoFirstPage:!1,pageLayout:s,pageMode:d}),l=await a(t.document,m);return o(p,l)},d=(e={})=>{t.document.props.onRender&&t.document.props.onRender(e)};return{on:(e,t)=>{y[e]||(y[e]=[]),y[e].push(t)},container:t,toBlob:async()=>{const e=(await s()).pipe(r());return new Promise(((t,r)=>{e.on("finish",(()=>{try{const r=e.toBlob("application/pdf");d({blob:r}),t(r)}catch(e){r(e)}})),e.on("error",r)}))},toBuffer:async()=>(d(),s()),toString:async()=>{let e="";const t=await s(!1);return new Promise(((r,n)=>{try{t.on("data",(t=>{e+=t})),t.on("end",(()=>{d(),r(e)}))}catch(e){n(e)}}))},removeListener:(e,t)=>{if(!y[e])return;const r=y[e].indexOf(t);r>-1&&y[e].splice(r,1)},updateContainer:c}},g=m,C={create:e=>e},w=async(e,r,n)=>{const o=v(e),i=await o.toBuffer(),a=t.createWriteStream(r);return i.pipe(a),new Promise(((e,t)=>{a.on("finish",(()=>{n&&n(i,r),e(i)})),a.on("error",t)}))},b=async e=>{const t=v(e);return await t.toBuffer()},P=e=>v(e).toString(),T=e=>{throw new Error(`${e} is a web specific API. You're either using this component on Node, or your bundler is not loading react-pdf from the appropriate web build.`)},x=()=>{T("usePDF")},F=()=>{T("PDFViewer")},S=()=>{T("PDFDownloadLink")},O=()=>{T("BlobProvider")},D=w;var B={pdf:v,Font:g,version:"2.2.0",StyleSheet:C,usePDF:x,PDFViewer:F,BlobProvider:O,PDFDownloadLink:S,renderToStream:b,renderToString:P,renderToFile:w,render:D,...e};export{O as BlobProvider,g as Font,S as PDFDownloadLink,F as PDFViewer,C as StyleSheet,f as createRenderer,B as default,v as pdf,D as render,w as renderToFile,b as renderToStream,P as renderToString,x as usePDF,u as version};
//# sourceMappingURL=react-pdf.es.min.js.map
